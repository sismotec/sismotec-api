FORMAT: 1A
HOST: http://sismotecapi.herokuapp.com

# Sismo Tec API
Sismo TEC REST API es utilizada por las aplicaciones Sismo Tec móviles y web.

## Base URL
Las solicitudes de producción se hacen a:<br />
http://sismotecapi.herokuapp.com

## Mock URL
Las solicitudes de prueba se hacen a: <br />
http://private-58094-sismotecapi.apiary-mock.com/

## REST
Sismo Tec API es una RESTful API:
- Hace uso de conceptos y técnicas nativas de HTTP
- Sigue las restricciones de REST
- Es definida en términos de endpoints y parámetros

## JSON
Sismo Tec API usa de manera exclusiva JSON, así que debes de asegurarte de
configurar el encabezado <strong>Content-type</strong> a
<strong>application/json</strong>. 


## Sismo Tec API Root [/]
Este endpoint es nuestro tradicional "Hello World!".

### Get the entry point [GET]

+ Response 200 (application/json; charset=utf-8)

    + Attributes
    
        + message: 'Hello World! This is SismoTec API!' (string)


## Crear cuenta [/sign-up]

### Crear cuenta [POST]
Crea una cuenta para un beneficiario o centro de acopio. Se necesita información 
del nombre de la institución (opcional), nombre del responsable, correo del
responsable, celular del responsable, latitud y longitud de la ubicación, una 
contraseña y tipo.

+ Request (application/json)
    
    + Attributes
    
        + institutionName: `Tec de Monterrey Campus Monterrey` (string, required) 
            
        + responsibleName: `John Doe` (string, required)
        
        + responsibleEmail: johndoe@tec.mx (string, required)
            
        + responsibleNumber: 5281828384 (number, required)
        
        + lat: 83.43 (number, required)
        
        + lon: 32.56 (number, required)
            
        + password: mypassword123 (string, required)
        
        + type: Centro de acopio (string, required)
        Posibles valores: Centro de acopio, Beneficiario.


+ Response 201 (application/json; charset=utf-8)
    
    + Attributes
    
        + id: 2 (number, required)
        
        + type: Centro de acopio (string, required)


## Iniciar sesión [/log-in]

### Iniciar sesión [POST]
Iniciar sesión para un beneficiario. Se necesita información del celular del
responsable y su contraseña.

+ Request (application/json)
    
    + Attributes

        + responsibleEmail: johndoe@tec.mx (string, required)

        + password: mypassword123 (string, required)


+ Response 200 (application/json; charset=utf-8)
    
    + Attributes
    
        + id: 2 (number, required)
        
        + type: Centro de acopio (string, required)


# Group Beneficiarios
Endpoints relacionados a las acciones de un beneficiario.

## Órdenes de envío [/beneficiarios/ordenes-envio]

### Obtener órdenes de envíos [GET]
Este endpoint permite obtener las órdenes de envío que espera un beneficiario.
Se necesita el ID del beneficiario y la respuesta incluye un arreglo de órdenes
de envío, donde cada órden tiene un arreglo de recursos.

+ Request (application/json)
    
    + Attributes
    
        + beneficiaryID: 2 (number, required)


+ Response 200 (application/json; charset=utf-8)
    
    + Attributes (array)
    
        + (Shipping Orders)


## Necesidades [/beneficiarios/necesidades]

### Crear necesidad [POST]
Crea una nueva necesidad asociada a un beneficiario. Se necesita información de
todos los recursos que contempla una necesidad.

+ Request (application/json)
    
    + Attributes
    
        + beneficiaryID: 2 (number, required)
    
        + resources: Resource, Resource2 (array[Resource], required)


+ Response 201 (application/json; charset=utf-8)

    + Attributes
    
        + necesityID: 3 (number, required)


### Obtener necesidades [GET]
Obtener una lista de necesidades de todos o algunos beneficiarios. 
Se necesita un arreglo que contiene los ID de los beneficiarios interesados
en conocer sus necesidades. Si el arreglo está vacío se regresan todas las
necesidades.

+ Request (application/json)
    
    + Attributes
    
        + beneficiariesID: 2, 5 (array[number], required)
    


+ Response 200 (application/json; charset=utf-8)

    + Attributes
    
        + necessities: Necessity, Necessity2 (array[Necessity], required)


### Confirmación de recibido [PUT]
Confirma que una órden de envío ha sido recibida por el beneficiario.
Se necesita el ID del beneficiario y el ID de la órden de envío.

+ Request (application/json)
    
    + Attributes
    
        + beneficiaryID: 2 (number, required)
        
        + orderID: 1 (number, required)


+ Response 200 (application/json; charset=utf-8)


# Group Centros de acopio
Endpoints relacionados a las acciones de un centro de acopio.

## Órdenes de envío [/centros-acopio/ordenes-envio]

### Obtener órdenes de envíos [GET]
Este endpoint permite obtener las órdenes de envío que ha mandado un centro de
acopio. Se necesita el ID del centro de acopio y la respuesta incluye un arreglo 
de órdenes de envío, donde cada órden tiene un arreglo de recursos.

+ Request (application/json)
    
    + Attributes
    
        + centerID: 6 (number, required)


+ Response 200 (application/json; charset=utf-8)
    
    + Attributes (array)
    
        + (Shipping Orders)


### Crear órden de envío [POST]
Este endpoint permite a un centro de acopio crear una órdenes de envío.
Se necesita el ID del centro de acopio, un arreglo de recursos,
el destino y el tiempo estimado.

+ Request (application/json)
    
    + Attributes
    
        + centerID: 6 (number, required)
        
        + resources: Resource, Resource2 (array[Resource], required)
        
        + destinationLat: 21.34 (number, required)

        + destinationLon: 23.45 (number, required)
        
        + estimatedTime: 1231 (number, required)
        Número entero en milisegundos.


+ Response 201 (application/json; charset=utf-8)

    + Attributes
    
        + orderID: 5 (number, required)


### Cancelar órdenes de envíos [DELETE]
Este endpoint permite a un centro de acopio cancelar una órden de envío.
Se necesita el ID de la órden de envío a cancelar.

+ Request (application/json)
    
    + Attributes
    
        + orderID: 5 (number, required)


+ Response 200 (application/json; charset=utf-8)


# Group Recursos
Endpoints relacionados a los recursos.

## Recursos [/recursos]

### Obtener todos los recursos [GET]
Este endpoint permite obtener todos los recursos disponibles.


+ Response 200 (application/json; charset=utf-8)
    
    + Attributes (array[ResourceStored])
    
        + (ResourceStored)
            + id: 2 (number, required)

            + name: Atún (string, required)

            + category: Enlatados (string, required)

            + unit: Latas (string, required)

# Group Necesidades
Endpoints relacionados a las necesidades de beneficiarios y centros de acopio.

## Necesidades locales [/necesidades/locales]

### Obtener todas las necesidades locales [GET]
Este endpoint permite obtener las necesidades que se encuentran cerca de
una ubicación mandada. Se necesita la latitud y longitud de la ubicación.

+ Request (application/json)
    
    + Attributes
    
        + lat: 83.43 (number, required)
        
        + lon: 32.56 (number, required)


+ Response 200 (application/json; charset=utf-8)
    
    + Attributes (array)
    
        + (LocalNecessity)


## Necesidades globales [/necesidades/globales]

### Obtener todas las necesidades globales [GET]
Este endpoint permite obtener las necesidades que se encuentran lejos de
una ubicación mandada. Se necesita la latitud y longitud de la ubicación.

+ Request (application/json)
    
    + Attributes
    
        + lat: 83.43 (number, required)
        
        + lon: 32.56 (number, required)


+ Response 200 (application/json; charset=utf-8)
    
    + Attributes (array)
    
        + (LocalNecessity)


# Data Structures

## LocalNecessity
+ necessityID: 2 (number, required)

+ ownerID: 4 (number, required)

+ ownerType: Centro de acopio (string, required)

+ lat: 83.43 (number, required)
        
+ lon: 32.56 (number, required)

+ resources: Resource, Resource2 (array[Resource], required)

## Necessity
+ beneficiaryID: 2 (number, required)

+ resources: Resource, Resource2 (array[Resource], required)

## Necessity2
+ beneficiaryID: 4 (number, required)

+ resources: Resource, Resource2 (array[Resource], required)

## Resource
+ id: 1 (number, required)

+ quantity: 50 (number, required)

## Resource2
+ id: 4 (number, required)

+ quantity: 20 (number, required)

## ResourceStored
+ id: 4 (number, required)

+ name: Agua (string, required)

+ category: Bebidas (string, required)

+ unit: Litros (string, required)

## Shipping Orders
+ id: 1 (number, required)

+ originLat: 45.44 (number, required)

+ originLon: 51.23 (number, required)

+ destinationLat: 21.34 (number, required)

+ destinationLon: 23.45 (number, required)

+ status: En camino (string, required)
    Valores posibles: En camino, Enviado, Cancelado.
    
+ resources: Resource, Resource2 (array[Resource], required)


    